"use strict";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var utils_1 = require('./utils');
// override Function.prototype.toString to make zone.js patched function
// look like native function
function patchFuncToString() {
    var originalFunctionToString = Function.prototype.toString;
    var g = typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global;
    Function.prototype.toString = function () {
        if (typeof this === 'function') {
            if (this[utils_1.zoneSymbol('OriginalDelegate')]) {
                return originalFunctionToString.apply(this[utils_1.zoneSymbol('OriginalDelegate')], arguments);
            }
            if (this === Promise) {
                var nativePromise = g[utils_1.zoneSymbol('Promise')];
                if (nativePromise) {
                    return originalFunctionToString.apply(nativePromise, arguments);
                }
            }
            if (this === Error) {
                var nativeError = g[utils_1.zoneSymbol('Error')];
                if (nativeError) {
                    return originalFunctionToString.apply(nativeError, arguments);
                }
            }
        }
        return originalFunctionToString.apply(this, arguments);
    };
}
exports.patchFuncToString = patchFuncToString;
function patchObjectToString() {
    var originalObjectToString = Object.prototype.toString;
    Object.prototype.toString = function () {
        if (this instanceof Promise) {
            return '[object Promise]';
        }
        return originalObjectToString.apply(this, arguments);
    };
}
exports.patchObjectToString = patchObjectToString;
//# sourceMappingURL=to-string.js.map